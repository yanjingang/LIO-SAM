/**:
  ros__parameters:

    # Topics
    pointCloudTopic: "/sensors/lidar/points"     # Point cloud data
    imuTopic: "/sensors/imu/data"                # IMU data
    odomTopic: "odometry/imu"                    # IMU pre-preintegration odometry, same frequency as IMU
    gpsTopic: "odometry/gpsz"                    # GPS odometry topic from navsat, see module_navsat.launch file

    # Frames
    lidarFrame: "lidar_link"
    baselinkFrame: "base_link"
    odometryFrame: "odom"
    mapFrame: "map"

    # GPS Settings
    useImuHeadingInitialization: false           # if using GPS data, set to "true"
    useGpsElevation: false                       # if GPS elevation is bad, set to "false"
    gpsCovThreshold: 2.0                         # m^2, threshold for using GPS data
    poseCovThreshold: 25.0                       # m^2, threshold for using GPS data

    # debug setting
    debugLidarTimestamp: true
    debugImu: true
    debugGps: false

    # Export settings
    savePCD: true                                # https://github.com/TixiaoShan/LIO-SAM/issues/3
    savePCDDirectory: "/Downloads/LOAM/"         # in your home folder, starts and ends with "/". Warning: the code deletes "LOAM" folder then recreates it. See "mapOptimization" for implementation

    # Sensor Settings
    sensor: hesai                                # lidar sensor type, either 'velodyne', 'ouster' or 'livox'
    N_SCAN: 40                                   # Pardar40P有40个通道 number of lidar channels (i.e., Velodyne/Ouster: 16, 32, 64, 128, Livox Horizon: 6)
    Horizon_SCAN: 1800                           # Pardar40P水平分辨率 = 水平视场角 / 水平角分辨率 = 360 / 0.2(10hz时) = 1800 lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048, Livox Horizon: 4000)
    downsampleRate: 1                            # default: 1. Downsample your data if too many
    # points. i.e., 16 = 64 / 4, 16 = 16 / 1
    lidarMinRange: 1.0                           # default: 1.0, minimum lidar range to be used
    lidarMaxRange: 1000.0                        # default: 1000.0, maximum lidar range to be used

    # IMU Settings (IMU内参)
    # imuAccNoise: 3.9939570888238808e-03
    # imuGyrNoise: 1.5636343949698187e-03
    # imuAccBiasN: 6.4356659353532566e-05
    # imuGyrBiasN: 3.5640318696367613e-05
    imuAccNoise: 7.5656614363139437e-03         # acc_n
    imuGyrNoise: 1.2050330151032497e-03         # gyr_n
    imuAccBiasN: 2.9325075138204079e-04         # acc_w
    imuGyrBiasN: 1.4177677047615486e-05         # gyr_w

    imuGravity: 9.80511
    imuRPYWeight: 0.01

    # Extrinsics (lidar -> IMU 外参)
    # extrinsicTrans:  [ 0.0,  0.0,  0.0 ]
    # extrinsicRot:    [-1.0,  0.0,  0.0,
    #                    0.0,  1.0,  0.0,
    #                    0.0,  0.0, -1.0 ]
    # extrinsicRPY: [ 0.0,  1.0,  0.0,
    #                -1.0,  0.0,  0.0,
    #                 0.0,  0.0,  1.0 ]
    # extrinsicTrans:  [0.0, 0.0, 0.0]
    # extrinsicRot:    [1.0,  0.0,  0.0,
    #                   0.0,  1.0,  0.0,
    #                   0.0,  0.0, 1.0 ]
    # extrinsicRPY:    [1.0,  0.0,  0.0,
    #                   0.0,  1.0,  0.0,
    #                   0.0,  0.0, 1.0 ]
    extrinsicTrans:  [0.00946221, 0.01114448, 0.13106208]
    extrinsicRot:  [[-0.02955599 -0.99955795 -0.00320762]
                    [ 0.9995592  -0.02954676 -0.00288678]
                    [ 0.00279073 -0.00329153  0.99999069]]
    extrinsicRPY:  [[-0.02955599 -0.99955795 -0.00320762]
                    [ 0.9995592  -0.02954676 -0.00288678]
                    [ 0.00279073 -0.00329153  0.99999069]]


    # LOAM feature threshold
    edgeThreshold: 1.0
    surfThreshold: 0.1
    edgeFeatureMinValidNum: 10
    surfFeatureMinValidNum: 100

    # voxel filter paprams
    odometrySurfLeafSize: 0.4                     # default: 0.4 - outdoor, 0.2 - indoor
    mappingCornerLeafSize: 0.2                    # default: 0.2 - outdoor, 0.1 - indoor
    mappingSurfLeafSize: 0.4                      # default: 0.4 - outdoor, 0.2 - indoor

    # robot motion constraint (in case you are using a 2D robot)
    z_tollerance: 1000.0                          # meters
    rotation_tollerance: 1000.0                   # radians

    # CPU Params
    numberOfCores: 4                              # number of cores for mapping optimization
    mappingProcessInterval: 0.15                  # seconds, regulate mapping frequency

    # Surrounding map
    surroundingkeyframeAddingDistThreshold: 1.0   # meters, regulate keyframe adding threshold
    surroundingkeyframeAddingAngleThreshold: 0.2  # radians, regulate keyframe adding threshold
    surroundingKeyframeDensity: 2.0               # meters, downsample surrounding keyframe poses   
    surroundingKeyframeSearchRadius: 50.0         # meters, within n meters scan-to-map optimization
    # (when loop closure disabled)

    # Loop closure
    loopClosureEnableFlag: true
    loopClosureFrequency: 1.0                     # Hz, regulate loop closure constraint add frequency
    surroundingKeyframeSize: 50                   # submap size (when loop closure enabled)
    historyKeyframeSearchRadius: 15.0             # meters, key frame that is within n meters from
    # current pose will be considerd for loop closure
    historyKeyframeSearchTimeDiff: 30.0           # seconds, key frame that is n seconds older will be
    # considered for loop closure
    historyKeyframeSearchNum: 25                  # number of hostory key frames will be fused into a
    # submap for loop closure
    historyKeyframeFitnessScore: 0.3              # icp threshold, the smaller the better alignment

    # Visualization
    globalMapVisualizationSearchRadius: 1000.0    # meters, global map visualization radius
    globalMapVisualizationPoseDensity: 10.0       # meters, global map visualization keyframe density
    globalMapVisualizationLeafSize: 1.0           # meters, global map visualization cloud density
